---
- name: deploy.yml - get release date
  set_fact:
    rails_release: "{{ ansible_date_time.date | replace('-', '') }}{{ ansible_date_time.time | replace(':', '') }}"
    rails_path_app: "{{ rails_path }}/{{ rails_app_name }}"

- name: deploy.yml - get release path
  set_fact:
    rails_release_path: "{{ rails_path_app }}/releases/{{ rails_release }}"

- name: deploy.yml - create app dirs
  file:
    dest: "{{ item }}"
    owner: "{{ rails_user }}"
    group: "{{ rails_user }}"
    mode: 0755
    recurse: yes
    state: directory
  with_items:
    - "{{ rails_path_app }}/releases"
    - "{{ rails_path_app }}/shared/log"
    - "{{ rails_path_app }}/shared/pids"
    - "{{ rails_path_app }}/shared/tmp"
  become_user: "{{ rails_user }}"
  become: yes

- name: deploy.yml - Fetching application sources
  git:
    repo: "{{ rails_repo }}"
    dest: "{{ rails_release_path }}"
    version: "{{ rails_repo_version }}"
    clone: yes
    depth: 1
    recursive: yes
    accept_hostkey: True
  notify: restart app
  become: yes
  become_user: "{{ rails_user }}"

- name: deploy.yml - create public directory
  file:
    dest: "{{ rails_release_path }}/public"
    owner: "{{ rails_user }}"
    group: "{{ rails_user }}"
    mode: 0755
    state: directory
  become_user: "{{ rails_user }}"
  become: yes

- name: deploy.yml - remove destinations for links
  file:
    dest: "{{ rails_release_path }}/{{ item }}"
    owner: "{{ rails_user }}"
    group: "{{ rails_user }}"
    state: absent
  with_items:
    - log
    - pids
    - tmp
  become_user: "{{ rails_user }}"
  become: yes

- name: deploy.yml - create symlinks in release
  file:
    src: "{{ rails_path_app }}/shared/{{ item }}"
    dest: "{{ rails_release_path }}/{{ item }}"
    owner: "{{ rails_user }}"
    group: "{{ rails_user }}"
    state: link
  with_items:
    - log
    - pids
    - tmp
  become_user: "{{ rails_user }}"
  become: yes

- name: deploy.yml - Creating bundle folder at vendors
  file:
    path: "{{ rails_release_path }}/vendor/bundle"
    state: directory
    owner: "{{ rails_user }}"
    group: "{{ rails_user }}"
    mode: u=rwx,g=xr,o=r

- name: deploy.yml - activate the new release
  file:
    src: "{{ rails_release_path }}"
    dest: "{{ rails_path_app }}/current"
    owner: "{{ rails_user }}"
    group: "{{ rails_user }}"
    state: link
  become_user: "{{ rails_user }}"
  become: yes

- name: deploy.yml - Templating out .env file
  template:
    dest: "{{ rails_release_path }}/current"
    src: dotenv.j2
  become: yes
  become_user: "{{ rails_user }}"

#- name: deploy.yml - run bundle install
#  command: /usr/local/rbenv/shims/bundle install --deployment --path vendor/bundle
#  args:
#    chdir: "{{ rails_release_path }}"
#  notify: restart app
#  become_user: "{{ rails_user }}"
#  become: yes

- name: deploy.yml - run bundle install
  bundler:
    executable: /usr/local/rbenv/shims/bundle
    extra_args: "--path vendor/bundle"
    state: present
    args:
      chdir: "{{ rails_release_path }}/current"
  notify: restart app
  become_user: "{{ rails_user }}"
  become: yes

- name: deploy.yml - get releases
  shell: ls -1t {{ rails_path_app }}/releases/ | tail -n +{{ rails_keep_releases + 1 }}
  register: rails_releases_dirs

- name: deply.yml - scafolding database
  shell: /usr/local/rbenv/shims/bundle exec rake db:create db:migrate
  args:
    chdir: "{{ rails_release_path }}"
  become_user: "{{ rails_user }}"
  notify: restart app
  become: yes

- name: deploy.yml - remove old releases
  file:
    dest: "{{ rails_path_app }}/releases/{{ item }}"
    state: absent
  with_items: "{{ rails_releases_dirs.stdout_lines }}"
  when: "{{ item | match('\\d{14}') }}"
  become_user: "{{ rails_user }}"
  become: yes
  notify: restart full stack
